<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="DELETE">
        <access>package_private</access>
        <active>false</active>
        <api_name>x_snc_devtools.CreateBitmap</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>CreateBitmap</name>
        <script><![CDATA[function CreateBitmap(aBitmap)
{
	/*
	function image(w, h)
	{
		this.header = '';
		this.data = Array();
		this.width = w;
		this.height = h;
	}
	// Convert a value to a little endian hexadecimal value
	function getLittleEndianHex(value)
	{
		var result = [];

		for (var bytes = 4; bytes > 0; bytes--)
		{
			result.push(String.fromCharCode(value & 255));
			value >>= 8;
		}
		return result.join('');
	}

	function setImageHeader(img)
	{
		var numFileBytes = getLittleEndianHex(img.width * img.height);
		var w = getLittleEndianHex(img.width);
		var h = getLittleEndianHex(img.height);

		img.header = 
			'BM' +                    // Signature
			numFileBytes +            // size of the file (bytes)*
			'\x00\x00' +              // reserved
			'\x00\x00' +              // reserved
			'\x36\x00\x00\x00' +      // offset of where BMP data lives (54 bytes)
			'\x28\x00\x00\x00' +      // number of remaining bytes in header from here (40 bytes)
			w +                       // the width of the bitmap in pixels*
			h +                       // the height of the bitmap in pixels*
			'\x01\x00' +              // the number of color planes (1)
			'\x20\x00' +              // 32 bits / pixel
			'\x00\x00\x00\x00' +      // No compression (0)
			'\x00\x00\x00\x00' +      // size of the BMP data (bytes)*
			'\x13\x0B\x00\x00' +      // 2835 pixels/meter - horizontal resolution
			'\x13\x0B\x00\x00' +      // 2835 pixels/meter - the vertical resolution
			'\x00\x00\x00\x00' +      // Number of colors in the palette (keep 0 for 32-bit)
			'\x00\x00\x00\x00';       // 0 important colors (means all colors are important)
	}
	// Flip image vertically
	function flipImage(img) 
	{
		var newImgData = new Array();

		for(var x = 0; x < img.width; x++)
		{
			for(var y = 0; y < img.height; y ++) 
			{
				var ny = img.height - 1 - y;
				newImgData[(ny * img.width) + x] = img.data[(y * img.width) + x];
			}
		}
		img.data = newImgData;
	}
	function background(img, x, y, w, h, color)
	{
		for (var ny = y; ny < y + h; ny++)
		{
			for (var nx = x; nx < x + w; nx++) 
			{
				img.data[ny * img.width + nx] = color;
			}
		}
	}
	// Fill a rectangle
	function fillRectangle(img, x, y, w, h, color)
	{
		for (var ny = y; ny < y + h; ny++)
		{
			for (var nx = x; nx < x + w; nx++) 
			{
				
						if(nx == x || ny == y || ny == y+h-1 || nx == x+w-1)
							img.data[ny * img.width + nx] = String.fromCharCode(204, 204, 204, 0);
						else
							img.data[ny * img.width + nx] = color;
				img.data[ny * img.width + nx] = color;
			}
		}
	}
	//Draw pixel
	function drawPixel(img, x, y, color)
	{
		fillRectangle(img, x, y, 1, 1, color);
	}
	// Main draw function
	function cGreen()
	{
		return String.fromCharCode(152, 255, 195, 0);
	}
	function cOrange()
	{
		return String.fromCharCode(12, 160, 232, 0);
	}
	function cRed()
	{
		return String.fromCharCode(0, 0, 255, 0);
	}
	function cBlue()
	{
		return String.fromCharCode(232, 12, 58, 0);
	}
	function cTurquoise()
	{
		return String.fromCharCode(232, 255, 13, 0);
	}

	
	
	var img = new image(5, 5);
	setImageHeader(img);
	background(img, 0, 0, img.width, img.height, String.fromCharCode(0, 0, 0, 0));
	drawPixel(img, 2, 2, String.fromCharCode(255, 255, 255, 0));
	flipImage(img);
	var bitmap =  img.header + img.data.join("");

*/
	
	return bitmap;
}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-03-18 22:07:27</sys_created_on>
        <sys_id>842cc082db520150bcced03cd3961946</sys_id>
        <sys_mod_count>3</sys_mod_count>
        <sys_name>CreateBitmap</sys_name>
        <sys_package display_value="DevTools WORK IN PROGRESS" source="x_snc_devtools">d689f6901bd38450a89720a8ec4bcbfd</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="DevTools WORK IN PROGRESS">d689f6901bd38450a89720a8ec4bcbfd</sys_scope>
        <sys_update_name>sys_script_include_842cc082db520150bcced03cd3961946</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-03-19 10:54:24</sys_updated_on>
    </sys_script_include>
    <sys_update_version action="INSERT_OR_UPDATE">
        <action>DELETE</action>
        <application display_value="DevTools WORK IN PROGRESS">d689f6901bd38450a89720a8ec4bcbfd</application>
        <file_path/>
        <instance_id>f492329ddb5849108aea21c405961946</instance_id>
        <instance_name>wildgrubedevquebec</instance_name>
        <name>sys_script_include_842cc082db520150bcced03cd3961946</name>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;&lt;sys_script_include action="INSERT_OR_UPDATE"&gt;&lt;access&gt;package_private&lt;/access&gt;&lt;active&gt;false&lt;/active&gt;&lt;api_name&gt;x_snc_devtools.CreateBitmap&lt;/api_name&gt;&lt;caller_access/&gt;&lt;client_callable&gt;false&lt;/client_callable&gt;&lt;description/&gt;&lt;name&gt;CreateBitmap&lt;/name&gt;&lt;script&gt;&lt;![CDATA[function CreateBitmap(aBitmap)
{
	/*
	function image(w, h)
	{
		this.header = '';
		this.data = Array();
		this.width = w;
		this.height = h;
	}
	// Convert a value to a little endian hexadecimal value
	function getLittleEndianHex(value)
	{
		var result = [];

		for (var bytes = 4; bytes &gt; 0; bytes--)
		{
			result.push(String.fromCharCode(value &amp; 255));
			value &gt;&gt;= 8;
		}
		return result.join('');
	}

	function setImageHeader(img)
	{
		var numFileBytes = getLittleEndianHex(img.width * img.height);
		var w = getLittleEndianHex(img.width);
		var h = getLittleEndianHex(img.height);

		img.header = 
			'BM' +                    // Signature
			numFileBytes +            // size of the file (bytes)*
			'\x00\x00' +              // reserved
			'\x00\x00' +              // reserved
			'\x36\x00\x00\x00' +      // offset of where BMP data lives (54 bytes)
			'\x28\x00\x00\x00' +      // number of remaining bytes in header from here (40 bytes)
			w +                       // the width of the bitmap in pixels*
			h +                       // the height of the bitmap in pixels*
			'\x01\x00' +              // the number of color planes (1)
			'\x20\x00' +              // 32 bits / pixel
			'\x00\x00\x00\x00' +      // No compression (0)
			'\x00\x00\x00\x00' +      // size of the BMP data (bytes)*
			'\x13\x0B\x00\x00' +      // 2835 pixels/meter - horizontal resolution
			'\x13\x0B\x00\x00' +      // 2835 pixels/meter - the vertical resolution
			'\x00\x00\x00\x00' +      // Number of colors in the palette (keep 0 for 32-bit)
			'\x00\x00\x00\x00';       // 0 important colors (means all colors are important)
	}
	// Flip image vertically
	function flipImage(img) 
	{
		var newImgData = new Array();

		for(var x = 0; x &lt; img.width; x++)
		{
			for(var y = 0; y &lt; img.height; y ++) 
			{
				var ny = img.height - 1 - y;
				newImgData[(ny * img.width) + x] = img.data[(y * img.width) + x];
			}
		}
		img.data = newImgData;
	}
	function background(img, x, y, w, h, color)
	{
		for (var ny = y; ny &lt; y + h; ny++)
		{
			for (var nx = x; nx &lt; x + w; nx++) 
			{
				img.data[ny * img.width + nx] = color;
			}
		}
	}
	// Fill a rectangle
	function fillRectangle(img, x, y, w, h, color)
	{
		for (var ny = y; ny &lt; y + h; ny++)
		{
			for (var nx = x; nx &lt; x + w; nx++) 
			{
				
						if(nx == x || ny == y || ny == y+h-1 || nx == x+w-1)
							img.data[ny * img.width + nx] = String.fromCharCode(204, 204, 204, 0);
						else
							img.data[ny * img.width + nx] = color;
				img.data[ny * img.width + nx] = color;
			}
		}
	}
	//Draw pixel
	function drawPixel(img, x, y, color)
	{
		fillRectangle(img, x, y, 1, 1, color);
	}
	// Main draw function
	function cGreen()
	{
		return String.fromCharCode(152, 255, 195, 0);
	}
	function cOrange()
	{
		return String.fromCharCode(12, 160, 232, 0);
	}
	function cRed()
	{
		return String.fromCharCode(0, 0, 255, 0);
	}
	function cBlue()
	{
		return String.fromCharCode(232, 12, 58, 0);
	}
	function cTurquoise()
	{
		return String.fromCharCode(232, 255, 13, 0);
	}

	
	
	var img = new image(5, 5);
	setImageHeader(img);
	background(img, 0, 0, img.width, img.height, String.fromCharCode(0, 0, 0, 0));
	drawPixel(img, 2, 2, String.fromCharCode(255, 255, 255, 0));
	flipImage(img);
	var bitmap =  img.header + img.data.join("");

*/
	
	return bitmap;
}]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2022-03-18 22:07:27&lt;/sys_created_on&gt;&lt;sys_id&gt;842cc082db520150bcced03cd3961946&lt;/sys_id&gt;&lt;sys_mod_count&gt;3&lt;/sys_mod_count&gt;&lt;sys_name&gt;CreateBitmap&lt;/sys_name&gt;&lt;sys_package display_value="DevTools WORK IN PROGRESS" source="x_snc_devtools"&gt;d689f6901bd38450a89720a8ec4bcbfd&lt;/sys_package&gt;&lt;sys_policy&gt;read&lt;/sys_policy&gt;&lt;sys_scope display_value="DevTools WORK IN PROGRESS"&gt;d689f6901bd38450a89720a8ec4bcbfd&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_include_842cc082db520150bcced03cd3961946&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2022-03-19 10:54:24&lt;/sys_updated_on&gt;&lt;/sys_script_include&gt;&lt;/record_update&gt;</payload>
        <payload_hash>577251033</payload_hash>
        <record_name>CreateBitmap</record_name>
        <reverted_from/>
        <source>d29a5e28db1ac910bcced03cd396197e</source>
        <source_table>sys_update_set</source_table>
        <state>previous</state>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-03-19 10:54:24</sys_created_on>
        <sys_id>c03c3ecadb5a0150bcced03cd3961970</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_recorded_at>17fa1d068d20000001</sys_recorded_at>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-03-19 10:54:24</sys_updated_on>
        <type>Script Include</type>
        <update_guid>c83c3ecaf15a0150ba2f33c6417d576f</update_guid>
        <update_guid_history>c83c3ecaf15a0150ba2f33c6417d576f:577251033,0b1c3ecacb5a015091a7b724f887223d:-1802602715,49ad00c2fd52015092ef838449d4c88b:395071419,29ac08823a520150a65b79857e7284d0:-1451788675</update_guid_history>
    </sys_update_version>
    <sys_metadata_delete action="INSERT_OR_UPDATE">
        <sys_audit_delete/>
        <sys_class_name>sys_metadata_delete</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-03-27 20:09:14</sys_created_on>
        <sys_db_object display_value="" name="sys_script_include">sys_script_include</sys_db_object>
        <sys_id>8fd538e9e0b44502b68d8df0f4548e04</sys_id>
        <sys_metadata>842cc082db520150bcced03cd3961946</sys_metadata>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>CreateBitmap</sys_name>
        <sys_package display_value="DevTools WORK IN PROGRESS" source="x_snc_devtools">d689f6901bd38450a89720a8ec4bcbfd</sys_package>
        <sys_parent/>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="DevTools WORK IN PROGRESS">d689f6901bd38450a89720a8ec4bcbfd</sys_scope>
        <sys_scope_delete display_value="">00add56a207e4bf3800cdb72bd156af9</sys_scope_delete>
        <sys_update_name>sys_script_include_842cc082db520150bcced03cd3961946</sys_update_name>
        <sys_update_version display_value="sys_script_include_842cc082db520150bcced03cd3961946">c03c3ecadb5a0150bcced03cd3961970</sys_update_version>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-03-27 20:09:14</sys_updated_on>
    </sys_metadata_delete>
</record_update>
